buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.mnursoy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.postgresql:postgresql:42.2.5'
    compile 'com.google.guava:guava:16.0'
    compile 'org.apache.commons:commons-lang3:3.9'

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

String profile = 'dev'
if (project.hasProperty('profile')) {
    profile = String.valueOf(project.getProperty("profile")).toLowerCase()
}

ext {
    buildProfile = profile
}

def frontendProjectDir = "${projectDir}/../frontend/"

sourceSets {
    main {
        resources {
            srcDirs = ["${frontendProjectDir}/dist", "${projectDir}/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "buildAngular"
}

task buildAngular(type: Exec) {
    // installAngular should be run prior to this task
    dependsOn "installAngular"
    workingDir "${frontendProjectDir}"
    inputs.dir "${frontendProjectDir}"
    // Add task to the standard build group
    group = BasePlugin.BUILD_GROUP
    // ng doesn't exist as a file in windows -> ng.cmd
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
        if (buildProfile == "prod") {
            commandLine "ng.cmd", "build", "--prod"
        } else {
            commandLine "ng.cmd", "build"
        }
    } else {
        println buildProfile
        if (buildProfile == "prod") {
            commandLine "ng", "build", "--prod"
        } else {
            commandLine "ng", "build"
        }
    }
}

task installAngular(type: Exec) {
    workingDir "${frontendProjectDir}"
    inputs.dir "${frontendProjectDir}"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
        commandLine "npm.cmd", "install"
    } else {
        commandLine "npm", "install"
    }
}
